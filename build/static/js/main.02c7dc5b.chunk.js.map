{"version":3,"sources":["serviceWorker.js","Store.js","components/Landing.js","components/Person.js","components/Navbar.js","components/PeopleList.js","components/NameForm.js","components/ListItem.js","components/AddItemForm.js","components/FeedbackBanner.js","components/PersonForm.js","components/ResultsHeader.js","components/ResultsItemsList.js","components/ResultsPersonsList.js","components/ResultsView.js","components/WorkView.js","index.js","App.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","initialState","mode","people","loggedPersons","personToEdit","undefined","reducer","action","newLoggedPersons","type","payload","push","filter","el","name","Store","createContext","Landing","toggleMode","className","onClick","Person","data","editPerson","deletePerson","setView","charAt","toUpperCase","substring","items","length","item","class","Navbar","reset","landing","addPerson","personEdit","validInputs","backToPeopleList","validLoggedPersons","e","PeopleList","map","key","NameForm","addNameForm","personName","setPersonName","validPersonName","setAddNameForm","personIsDuplicate","textInput","useEffect","focus","value","placeholder","ref","text","onChange","target","ListItem","removeItem","itemEditing","editItemName","editItemCost","validEditItem","setItemEditing","toggleItemEdit","setEditItemName","setEditItemCost","saveItemChanges","cost","AddItemForm","itemName","setItemName","itemCost","setItemCost","validItem","addItem","FeedbackBanner","toggleErrorMsg","PersonForm","addPersonDispatch","useState","errorMsg","setErrorMsg","setItems","validItems","itemIsDuplicate","preventDefault","newItem","newItems","updatedItem","ResultsHeader","totalCost","costPerPerson","viewMode","setViewMode","setPersonDetail","ResultsItemsList","getItemsList","ResultsPersonsList","person","difference","personDetail","expensePerPerson","personDetailsToggle","isExpanded","personIsOwed","personDebtClass","ResultsView","setTotalCost","toFixed","getExpensePerPerson","forEach","getDifference","Math","abs","getTotalCost","listItem","href","style","textDecoration","WorkView","resetData","editPersonDispatch","deletePersonDispatch","view","ReactDOM","render","props","useReducer","dispatch","Provider","children","useContext","personKey","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.02c7dc5b.chunk.js","sourcesContent":["const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    window.location.hostname === '[::1]' ||\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n             \n              console.log('Content is cached for offline use.');\n\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n\n//////\n","import React, { useReducer, createContext } from \"react\";\n\nconst initialState = {\n  mode: \"landing\",\n  people: {\n    loggedPersons: [],\n    personToEdit: undefined,\n  }\n};\n\nfunction reducer (state, action) {\n  let newLoggedPersons;\n  switch (action.type) {\n    case 'TOGGLE_MODE':\n      return { ...state, mode: action.payload };\n    case 'ADD_PERSON':\n      newLoggedPersons = [...state.people.loggedPersons];\n      newLoggedPersons.push(action.payload);\n      return { ...state, people: { ...state.people, loggedPersons: newLoggedPersons } };\n    case 'EDIT_PERSON':\n      let personToEdit = state.people.loggedPersons.filter(el => el.name === action.payload);\n      newLoggedPersons = [...state.people.loggedPersons].filter(el => el.name !== action.payload);\n      return { ...state, people: { ...state.people, loggedPersons: newLoggedPersons, personToEdit: personToEdit[0] } };   \n    case 'DELETE_PERSON':\n      newLoggedPersons = [...state.people.loggedPersons].filter(el => el.name !== action.payload);\n      return { ...state, people: { ...state.people, loggedPersons: newLoggedPersons } };\n    case 'RESET_DATA':\n      newLoggedPersons = [];\n      return { ...state, people: { ...state.people, loggedPersons: newLoggedPersons } };\n    default:\n      return state;\n  };\n};\n\nexport function StoreProvider (props) {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const value = { state, dispatch }\n  return <Store.Provider value={value}>{props.children}</Store.Provider>\n}\n\nexport const Store = createContext();","import React from 'react';\n\nexport default function Landing({ toggleMode }) {\n  return (\n    <div className=\"view-container landing\">\n      <div className=\"landing__banner\">\n        <div className=\"landing__banner__main\">\n          <h1 className=\"landing__banner__main__title\">\n            Split\n          </h1>\n          <hr className=\"landing__banner__main__ruler\"/>\n          <h3 className=\"landing__banner__main__title landing__banner__main__title--description\">\n            Expense breakdown for parties, projects and more..\n          </h3>\n        </div>\n        <div className=\"landing__description\">\n          <p className=\"landing__description__paragraph\">Add person</p>\n          <p className=\"landing__description__paragraph\">Log items bought and prices</p>\n          <p className=\"landing__description__paragraph\">See how much everyone owes or is owed</p>\n        </div>\n      </div>\n      <div className=\"button button--landing\" onClick={() => toggleMode(\"workView\")}>\n        START\n      </div>\n    </div>\n  );\n};","import React from \"react\";\n\nexport default function Person({ data, editPerson, deletePerson, setView }) {\n  const editCurrentPerson = (item) => {\n    setView();\n    editPerson(item);\n  };\n\n  return (\n    <div className=\"list-item\">\n      <div className=\"list-item__text-container\">\n        <span className=\"list-item__text--bold\">\n          {data.name.charAt(0).toUpperCase() + data.name.substring(1)} \n        </span>\n        <span>\n          {data.items.length} {data.items.length > 1 ? \"items\" : \"item\"}\n        </span>\n      </div>\n      <div className=\"list-item__button-container\">\n        <div className=\"button person-btn\" onClick={() => editCurrentPerson(data.name)}>\n          Edit\n        </div>\n        <div className=\"button person-btn\" onClick={() => deletePerson(data.name)}>\n          <i class=\"fa fa-times\"></i>\n        </div>\n      </div>\n    </div>\n  );\n};","import React from \"react\";\n\nexport default function Navbar({ \n  type ,\n  reset,\n  landing, \n  setView, \n  addPerson, \n  personEdit, \n  validInputs, \n  backToPeopleList, \n  validLoggedPersons, \n}) {\n  return (\n    <>\n      {type === \"personForm\" && (\n        <div className=\"navbar\">\n          <div className=\"button back-btn\" onClick={backToPeopleList}>\n            <i class=\"fa fa-chevron-left\"></i>\n          </div>\n          <div \n            onClick={(e) => validInputs ? addPerson(e) : null}\n            className={validInputs ? \"button get-result-btn\" : \"button get-result-btn-disabled\"} \n          >\n            {personEdit ? \"SAVE CHANGES\" : \"ADD PERSON\"}\n          </div>\n        </div> \n      )}\n      {type === \"peopleList\" && (\n        <div className=\"navbar\">\n          <div className=\"button back-btn\" onClick={() => landing()}>\n            <i class=\"fa fa-chevron-left\"></i>\n          </div>\n          <div \n            className={validLoggedPersons ? \"button get-result-btn\" : \"button get-result-btn-disabled\"}\n            onClick={() => validLoggedPersons ? setView(\"resultsView\") : null}\n          >\n            GET RESULT\n          </div>\n        </div>\n      )}\n      {type === \"resultsView\" && (\n        <div className=\"navbar navbar--results\">\n          <div className=\"button results-btn results-btn--back\" onClick={backToPeopleList}>\n            <i class=\"fa fa-chevron-left\"></i>\n          </div>\n          <div className=\"button results-btn\" onClick={reset}>\n            Start Again\n          </div>\n      </div> \n      )}\n    </>\n  );\n};","import React from \"react\";\nimport Person from \"./Person\";\nimport Navbar from \"./Navbar\";\n\nexport default function PeopleList({ setView, landing, data, deletePerson, editPerson }) {\n  const validLoggedPersons = data.people.loggedPersons.length >= 1 ? true : false;\n  return (\n    <div className=\"view-container people-list\">\n      <Navbar \n        type=\"peopleList\"\n        landing={() => landing()}\n        setView={() => setView(\"resultsView\")}\n        validLoggedPersons={validLoggedPersons}\n      />\n      <div className=\"people-list__content-container\">\n        {validLoggedPersons && (\n          <div className=\"people-list__content-container--people\">\n            {data.people.loggedPersons.map(el => \n              <Person \n                data={el}\n                key={el.name}\n                editPerson={editPerson}\n                deletePerson={deletePerson}\n                setView={() => setView(\"personEdit\")}\n              /> \n            )}\n          </div>\n        )}\n        <div \n          onClick={() => setView(\"personForm\")}\n          className={validLoggedPersons ? \"button add-person-btn add-person-btn-bottom\" : \"button add-person-btn\"} \n        >\n          <h3>Add Person</h3>\n        </div>\n      </div>\n    </div>\n  );\n};","import React, { useEffect } from \"react\";\n\nexport default function NameForm({ addNameForm, personName, setPersonName, validPersonName, setAddNameForm, personIsDuplicate }) {\n  let textInput = null;\n  useEffect(() => { textInput.focus() }, []);\n\n  return (\n    <div className={addNameForm ? \"name-form--full\" : \"name-form--small\"}>\n      <div className=\"name-form__input-container\">\n        <div className={addNameForm ? \"name-form__input__name-message\" : \"name-form__input__name-message--small\"}>\n          {addNameForm ? \n            (personIsDuplicate ? \"That name already exists\" : \"Who bought this items?\") :\n            \"Adding items bought by\"\n          }\n        </div>\n        <input \n          type=\"text\" \n          value={personName} \n          placeholder=\"Add person name\" \n          ref={(text) => { textInput = text; }}\n          onChange={(e) => setPersonName(e.target.value)}\n          className={addNameForm ? \n            (personIsDuplicate ? \"name-form__person-input name-form__person-input--error\" : \"name-form__person-input\") : \n            \"name-form__person-input name-form__person-input--small\"\n          }\n        />\n      </div>\n      {addNameForm && (\n        <div \n        onClick={() => (validPersonName && !personIsDuplicate) ? setAddNameForm(false) : null}\n        className={(validPersonName && !personIsDuplicate) ? \"button add-person-btn\" : \"button add-person-btn-disabled\"} \n        >\n          <h3>Add Items</h3>\n        </div>\n      )}\n    </div>\n  );\n};","import React from \"react\";\n\nexport default function ListItem({\n  el, \n  removeItem, \n  itemEditing, \n  editItemName, \n  editItemCost,\n  validEditItem,\n  setItemEditing, \n  toggleItemEdit, \n  setEditItemName, \n  setEditItemCost, \n  saveItemChanges, \n}) {\n  return (\n    <div className={itemEditing !== el.name ? \"list-item\" : \"list-item list-item--editing\"}>\n      {itemEditing !== el.name && (\n        <>\n          <div className=\"list-item__text-container\">\n            <span>\n              {el.name.charAt(0).toUpperCase() + el.name.substring(1)} \n            </span>\n            <span className=\"list-item__text--bold\">\n              ${el.cost}\n            </span>\n          </div>\n          <div className=\"list-item__button-container\">\n            <div className=\"button list-item__btn\" onClick={toggleItemEdit}>Edit</div>\n            <div className=\"button list-item__btn\" onClick={removeItem}>\n              <i className=\"fa fa-times\"></i>\n            </div>\n          </div>\n        </>\n      )}\n      {itemEditing === el.name && (\n        <>\n          <div className=\"list-item__input-container\">\n            <input \n              type=\"text\" \n              value={editItemName} \n              placeholder=\"Item Name\" \n              className=\"list-item__input-container__input list-item__input-container__input--text\"\n              onChange={(e) => setEditItemName(e.target.value)}\n            />\n            <input \n              type=\"number\" \n              value={editItemCost} \n              placeholder=\"Cost\" \n              className=\"list-item__input-container__input\"\n              onChange={(e) => setEditItemCost(e.target.value)}\n            />\n          </div>\n          <div className=\"list-item__button-container\">\n            <div \n              className={validEditItem ? \"button list-item__button--edit\" : \"button list-item__button--edit list-item__button--edit--disabled\"}\n              onClick={validEditItem ? saveItemChanges : null}\n            >\n              Save\n            </div>\n            <div \n              className=\"button list-item__button--edit\" \n              onClick={setItemEditing}\n              >\n                Cancel\n              </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};","import React from \"react\";\n\nexport default function AddItemForm({ itemName, setItemName, itemCost, setItemCost, validItem, addItem }) {\n  return (\n    <div className=\"add-item-form\">\n      <div className=\"add-item-form__inputs\">\n        <input \n          type=\"text\" \n          value={itemName} \n          placeholder=\"Item\" \n          className=\"add-item-form__input\"\n          onChange={(e) => setItemName(e.target.value)}\n        />\n        <input \n          type=\"number\" \n          value={itemCost} \n          placeholder=\"Cost\"\n          className=\"add-item-form__input add-item-form__input--small\" \n          onChange={(e) => setItemCost(e.target.value)}\n        />\n      </div>\n      <div \n        onClick={(e) => validItem ? addItem(e) : null} \n        className={validItem ? \"button add-item-btn\" : \"button add-item-btn-disabled\"}\n      >\n        Add Item\n      </div>\n    </div>\n  );\n};","import React from \"react\";\n\nexport default function FeedbackBanner({ type, toggleErrorMsg }) {\n  return (\n    <>\n      {(type === \"duplicatePerson\" || type === \"duplicateItem\") && (\n        <div className=\"feedback-banner--duplicate-item\">\n          <div className=\"feedback-banner--duplicate-item__text\">\n            {type === \"duplicateItem\" ? \"An item\" : \"A person\"} with that name already exists, try a different name\n          </div>\n          <div \n            onClick={toggleErrorMsg} \n            className=\"button add-item-btn banner_duplicate_item_btn\"\n          >\n            Ok\n          </div>\n        </div>\n      )}\n      {type === \"no_people\" && (\n        <div className=\"feedback-banner--no-person\">\n          <h3>No Items</h3>\n          <h4 className=\"feedback-banner--no-person__text\">Start adding using the form above</h4>\n        </div>\n      )}\n    </>\n  );\n};","import React, { useState } from \"react\";\nimport Navbar from \"./Navbar\";\nimport NameForm from \"./NameForm\";\nimport ListItem from \"./ListItem\";\nimport AddItemForm from \"./AddItemForm\";\nimport FeedbackBanner from \"./FeedbackBanner\";\n\nexport default function PersonForm({ setView, state, addPersonDispatch, personEdit, personToEdit }) {\n  const [itemName, setItemName] = useState(\"\");\n  const [itemCost, setItemCost] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(false);\n  const [editItemName, setEditItemName] = useState(\"\");\n  const [editItemCost, setEditItemCost] = useState(\"\");\n  const [itemEditing, setItemEditing] = useState(false);\n  const [addNameForm, setAddNameForm] = useState(personEdit ? false : true);\n  const [items, setItems] = useState(personToEdit ? personToEdit.items : []);\n  const [personName, setPersonName] = useState(personEdit ? personToEdit.name : \"\");\n\n  let validItems = items.length !== 0 ? true : false;\n  let validPersonName = personName === \"\" ? false : true;\n  let validItem = itemName !== \"\" && (itemCost !== \"\" && itemCost > 0);\n  let validEditItem = editItemName !== \"\" && (editItemCost !== \"\" && editItemCost > 0);\n  let validInputs = validPersonName && validItems;\n  let itemIsDuplicate = items.filter(el => el.name === itemName).length === 0 ? false : true;\n  let personIsDuplicate = state.people.loggedPersons.filter(el => el.name === personName).length === 0 ? false : true;\n\n  const addPerson = (e) => {\n    e.preventDefault();\n    if(personIsDuplicate) {\n      setErrorMsg(\"duplicatePerson\");\n    } else {\n      const newPerson = { name: personName, items };\n      addPersonDispatch(newPerson);\n      setView(\"peopleList\");\n    };\n  };\n\n  const addItem = (e) => {\n    e.preventDefault();\n    if(itemIsDuplicate) {\n      setErrorMsg(\"duplicateItem\");\n    } else {\n      if(errorMsg) setErrorMsg(false);\n      let newItem = { name: itemName, cost: itemCost };\n      let newItems = [...items];\n      newItems.push(newItem);\n      setItems(newItems);\n      setItemName(\"\");\n      setItemCost(\"\");\n    };\n  };\n\n  const removeItem = (item) => {\n    let newItems = [...items];\n    newItems = newItems.filter(el => el.name !== item);\n    setItems(newItems);\n  };\n\n  const toggleItemEdit = (item) => {\n    setEditItemName(item.name);\n    setEditItemCost(item.cost);\n    setItemEditing(item.name);\n  };\n\n  const saveItemChanges = (item) => {\n    if(itemIsDuplicate) {\n      setErrorMsg(\"duplicateItem\");\n    } else {\n      let newItems = [...items];\n      newItems = newItems.filter(el => el.name !== item);\n      const updatedItem = { name: editItemName, cost: editItemCost };\n      newItems.push(updatedItem);\n      setItems(newItems);\n      setItemEditing(false);\n    };\n  };\n\n  const backToPeopleList = () => {\n    if(personEdit) { addPersonDispatch(personToEdit) };\n    setView(\"peopleList\") \n  };\n\n  return (\n    <div className=\"view-container person-form\">\n      <Navbar \n        type=\"personForm\"\n        addPerson={addPerson}\n        personEdit={personEdit}\n        validInputs={validInputs}\n        backToPeopleList={backToPeopleList}\n      />\n      <div className=\"person-form__content\">\n        <NameForm \n          personName={personName}\n          addNameForm={addNameForm}\n          setPersonName={setPersonName}\n          setAddNameForm={setAddNameForm}\n          validPersonName={validPersonName}\n          personIsDuplicate={personIsDuplicate}\n        />\n        {!addNameForm && (\n          <div className=\"person-form__content__items-container\">\n            {(errorMsg === \"duplicateItem\" && items.length !== 0) && (\n              <FeedbackBanner type={errorMsg} toggleErrorMsg={() => setErrorMsg(false)} />\n            )}\n            {errorMsg === \"duplicatePerson\" && (\n              <FeedbackBanner type={errorMsg} toggleErrorMsg={() => setErrorMsg(false)} />\n            )}\n            {!errorMsg && (\n              <AddItemForm \n                addItem={addItem}\n                itemName={itemName}\n                itemCost={itemCost}\n                validItem={validItem}\n                setItemCost={setItemCost}\n                setItemName={setItemName}\n              />\n            )}\n            {items.length === 0 && <FeedbackBanner type=\"no_people\" />}\n            {items.map(el => \n              <ListItem \n                el={el}\n                key={el.name}\n                itemEditing={itemEditing}\n                editItemName={editItemName}\n                editItemCost={editItemCost}\n                validEditItem={validEditItem}\n                setEditItemCost={setEditItemCost}\n                setEditItemName={setEditItemName}\n                removeItem={() => removeItem(el.name)}\n                toggleItemEdit={() => toggleItemEdit(el)}\n                setItemEditing={() => setItemEditing(false)}\n                saveItemChanges={() => saveItemChanges(el.name)}\n              />\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};","import React from \"react\";\n\nexport default function ResultsHeader({ totalCost, costPerPerson, viewMode, setViewMode, setPersonDetail }) {\n  const toggleItemsView = () => {\n    setViewMode(\"items\");\n    setPersonDetail(false);\n  };\n\n  return (\n    <div className=\"results-header\">\n      <div className=\"results-header__results-text\">\n        <div className=\"results-header__results-text--main\">\n          Total cost <span>${totalCost}</span>\n        </div>\n        <div className=\"results-header__results-text--secondary\">\n          Cost per person <span>${costPerPerson}</span>\n        </div>\n      </div>\n      <div className=\"results-header__toggle-lists-buttons\">\n        <div\n          className={viewMode === \"persons\" ? \"button results-btn results-btn--toggle-results results-btn--toggle-results--pressed\" : \"button results-btn results-btn--toggle-results\"}\n          onClick={viewMode === \"persons\" ? null : () => setViewMode(\"persons\")}\n        >\n          PERSONS\n        </div>\n        <div \n          className={viewMode === \"items\" ? \"button results-btn results-btn--toggle-results results-btn--toggle-results--pressed\" : \"button results-btn results-btn--toggle-results\"}\n          onClick={viewMode === \"items\" ? null : () => toggleItemsView()}\n        >\n          ITEMS\n        </div>\n      </div>\n    </div>\n  );\n};","import React from \"react\";\n\nexport default function ResultsItemsList({ getItemsList, items }) {\n  return (\n    getItemsList(items).map(item => \n      <div key={item.name} className=\"list-item\">\n        <div>\n          {item.name.charAt(0).toUpperCase() + item.name.substring(1)} \n        </div>\n        <div className=\"list-item--results__content-container\">  \n          <div className=\"list-item--results__item--cost\">\n            $ {item.cost}\n          </div>\n          <div className=\"list-item--results__item--person-name\">\n            {item.personName.charAt(0).toUpperCase() + item.personName.substring(1)} \n          </div>\n        </div>\n      </div>\n    )\n  );\n};","import React from \"react\";\n\nexport default function ResultsPersonsList({ \n  person, \n  difference, \n  personDetail, \n  costPerPerson, \n  expensePerPerson, \n  personDetailsToggle, \n  }) {\n  const isExpanded = personDetail === person.name;\n  const personIsOwed = expensePerPerson > costPerPerson;\n\n  const personDebtClass = isExpanded ? \n    \"results-persons-list__card-info--expanded\" :\n    (personIsOwed ? \n      \"results-persons-list__card-info--is-owed\" :\n      \"results-persons-list__card-info\"\n    );  \n  \n  return (\n    <div \n      onClick={personDetailsToggle} \n      className={isExpanded ? \"list-item list-item--show\" : \"list-item list-item__person--results\"}\n    >\n      <div className={isExpanded ? \n        \"results-persons-list__card-info__row results-persons-list__card-info__row--expanded\" : \n        \"results-persons-list__card-info__row\"\n      }>\n        <div className={isExpanded ? \n          \"results-persons-list__card-info__name results-persons-list__card-info__name--expanded\" : \n          \"results-persons-list__card-info__name\"\n        }>\n          {person.name.charAt(0).toUpperCase() + person.name.substring(1)} \n        </div>\n        <div className={personDebtClass}>\n          {personIsOwed ? \"IS OWED\" : \"OWES\"}  ${difference}\n        </div>\n        <i className={isExpanded ? \"fa fa-caret-up\" : \"fa fa-caret-down\"}></i>\n      </div>\n      {isExpanded && (\n        <div className=\"results-persons-list__card--expanded__info--content\">\n          <div className=\"results-persons-list__card--expanded__info--paid\">PAID ${expensePerPerson}</div>\n          {person.items.map(item => (\n            <div key={item.name} className=\"results-persons-list__card--expanded__info--items\">\n              {item.name.charAt(0).toUpperCase() + item.name.substring(1)}  -  ${item.cost}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\n\nimport Navbar from \"./Navbar\";\nimport ResultsHeader from \"./ResultsHeader\";\nimport ResultsItemsList from \"./ResultsItemsList\";\nimport ResultsPersonsList from \"./ResultsPersonsList\";\n\nexport default function ResultsView({ setView, data, reset }) {\n  const [totalCost, setTotalCost] = useState(0);\n  const [viewMode, setViewMode] = useState(\"persons\");\n  const [personDetail, setPersonDetail] = useState(undefined);\n  let costPerPerson = +(totalCost / data.people.loggedPersons.length).toFixed(2);\n\n  const personDetailsToggle = (person) => {  \n    setPersonDetail(person === personDetail ? false : person);\n  };\n\n  const getItemsList = (loggedPersons) => {\n    let items = [];\n    loggedPersons.forEach(person => {\n      person.items.forEach(item => {\n        let listItem = {...item, personName: person.name};\n        items.push(listItem);\n      });\n    });\n    return items;\n  };\n\n  const getExpensePerPerson = (items) => {\n    let expensePerPerson = 0;\n    items.forEach(el => {\n      expensePerPerson = expensePerPerson + (+el.cost);\n    });\n    return expensePerPerson;\n  };\n\n  const getTotalCost = () => {\n    let totalCost = 0;\n    data.people.loggedPersons.forEach(el => {\n      totalCost = totalCost + getExpensePerPerson(el.items);\n    });\n    return totalCost;\n  };\n\n  const getDifference = (items) => {\n    let expensePerPerson = getExpensePerPerson(items);\n    return Math.abs(expensePerPerson - costPerPerson);\n  };\n\n  useEffect(() => {\n    setTotalCost(getTotalCost());\n  }, []);\n  \n  return (\n    <div className=\"view-container\">\n       <Navbar \n        reset={reset}\n        type=\"resultsView\"\n        backToPeopleList={() => setView(\"peopleList\")}\n      />\n      <ResultsHeader \n        viewMode={viewMode}\n        totalCost={totalCost}\n        setViewMode={setViewMode}\n        costPerPerson={costPerPerson}\n        setPersonDetail={setPersonDetail}\n      />\n      {viewMode === \"persons\" && data.people.loggedPersons.map(person => \n        <ResultsPersonsList\n          person={person}\n          key={person.name}\n          personDetail={personDetail}\n          costPerPerson={costPerPerson}\n          difference={getDifference(person.items)}\n          expensePerPerson={getExpensePerPerson(person.items)}\n          personDetailsToggle={() => personDetailsToggle(person.name)}\n        />\n      )}\n      {viewMode === \"items\" && <ResultsItemsList getItemsList={getItemsList} items={data.people.loggedPersons}/>}\n      <div className=\"watermark\">\n        <a href=\"http://www.github.com/pgast\" style={{ textDecoration: \"none\" }}>\n          &lt;/&gt; pgast\n        </a>\n      </div>\n    </div>\n  );\n};","import React, { useState } from \"react\";\nimport PeopleList from \"./PeopleList\";\nimport PersonForm from \"./PersonForm\";\nimport ResultsView from \"./ResultsView\";\n\nexport default function WorkView({ \n  data, \n  resetData,\n  toggleMode,\n  addPersonDispatch, \n  editPersonDispatch, \n  deletePersonDispatch, \n}) {\n  const [view, setView] = useState(\"peopleList\");\n  const reset = () => {\n    resetData();\n    toggleMode(\"landing\");\n  };\n\n  return (\n    <>\n      {view === \"peopleList\" && (\n        <PeopleList \n          data={data} \n          setView={setView} \n          editPerson={editPersonDispatch}\n          deletePerson={deletePersonDispatch} \n          landing={() => toggleMode(\"landing\")} \n        />\n      )}  \n      {view === \"resultsView\" && (\n        <ResultsView \n          data={data}\n          reset={reset}\n          setView={setView} \n        />\n      )}\n      {view === \"personEdit\" && (\n        <PersonForm \n          personEdit \n          state={data} \n          setView={setView} \n          addPersonDispatch={addPersonDispatch} \n          personToEdit={data.people.personToEdit}\n        />\n      )}\n      {view === \"personForm\" && (\n        <PersonForm \n          state={data} \n          setView={setView} \n          personEdit={false} \n          personToEdit={false}\n          addPersonDispatch={addPersonDispatch} \n        />\n      )}\n    </>\n  );\n};","import ReactDOM from 'react-dom';\nimport React from 'react';\n\nimport * as serviceWorker from './serviceWorker';\nimport { StoreProvider } from './Store';\nimport App from './App';\nimport \"./Styles.css\";\n\nReactDOM.render(<StoreProvider><App /></StoreProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import React, { useContext } from 'react';\n\nimport { Store } from './Store';\nimport Landing from './components/Landing';\nimport WorkView from './components/WorkView';\n\nexport default function App() {\n  const { state, dispatch } = useContext(Store);\n  const resetData = () => dispatch({ type: 'RESET_DATA' });\n  const toggleMode = (mode) => dispatch({ type: 'TOGGLE_MODE', payload: mode });\n  const addPerson = (person) => dispatch({ type: \"ADD_PERSON\", payload: person });\n  const editPerson = (personKey) => dispatch({ type: 'EDIT_PERSON', payload: personKey });\n  const deletePerson = (personKey) => dispatch({ type: 'DELETE_PERSON', payload: personKey });\n\n  return (\n    <>\n     {state.mode === \"landing\" && <Landing toggleMode={toggleMode}/>}\n     {state.mode === \"workView\" && (\n        <WorkView \n          data={state} \n          resetData={resetData}\n          toggleMode={toggleMode} \n          addPersonDispatch={addPerson} \n          editPersonDispatch={editPerson}\n          deletePersonDispatch={deletePerson} \n        />\n      )}\n    </>\n  );\n};"],"sourceRoot":""}